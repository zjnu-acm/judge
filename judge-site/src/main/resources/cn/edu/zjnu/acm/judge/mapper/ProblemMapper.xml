<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.github.io/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zjnu.acm.judge.mapper.ProblemMapper">
    <resultMap id="baseResultMap" type="cn.edu.zjnu.acm.judge.domain.Problem">
        <id property="id" column="problem_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="input" column="input"/>
        <result property="output" column="output"/>
        <result property="sampleInput" column="sample_input"/>
        <result property="sampleOutput" column="sample_output"/>
        <result property="hint" column="hint"/>
        <result property="source" column="source"/>
        <result property="inDate" column="in_date"/>
        <result property="timeLimit" column="time_limit"/>
        <result property="memoryLimit" column="memory_limit"/>
        <result property="accepted" column="accepted"/>
        <result property="submit" column="submit"/>
        <result property="solved" column="solved"/>
        <result property="submitUser" column="submit_user"/>
        <result property="disabled" column="disabled"/>
        <result property="createdTime" column="created_time"/>
        <result property="modifiedTime" column="modified_time"/>

        <result property="origin" column="origin"/>
        <result property="status" column="status"/>
    </resultMap>
    <sql id="joinI18n">
        left join problem_i18n pi on p.problem_id=pi.id
        and pi.locale <choose>
            <when test='lang==null'> is null</when>
            <otherwise>=#{lang}</otherwise>
        </choose>
    </sql>
    <insert id="save">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select COALESCE(max(problem_id)+1,1000) maxp from problem
        </selectKey>
        INSERT INTO problem (problem_id,title,description,input,output,sample_input,sample_output,hint,source,in_date,time_limit,memory_limit,disabled)
        values (#{id},COALESCE(#{title},''),COALESCE(#{description},''),COALESCE(#{input},''),COALESCE(#{output},''),COALESCE(#{sampleInput},''),COALESCE(#{sampleOutput},''),COALESCE(#{hint},''),COALESCE(#{source},''),now(),#{timeLimit},#{memoryLimit},#{disabled})
    </insert>
    <select id="findOne" resultMap="baseResultMap">
        select
            p.problem_id,
            COALESCE(pi.title,p.title) title,
            COALESCE(pi.description,p.description) description,
            COALESCE(pi.input,p.input) input,
            COALESCE(pi.output,p.output) output,
            p.sample_input,
            p.sample_output,
            COALESCE(pi.hint,p.hint) hint,
            COALESCE(pi.source,p.source) source,
            p.in_date,
            p.time_limit,
            p.memory_limit,
            p.disabled,
            p.created_time,
            p.modified_time,
            p.accepted,
            p.submit,
            p.solved,
            p.submit_user
        from problem p
        <include refid="joinI18n"/>
        where problem_id=#{id}
    </select>
    <select id="findOneNoI18n" resultMap="baseResultMap">
        select
            p.problem_id,
            p.in_date,
            p.time_limit,
            p.memory_limit,
            p.disabled,
            p.accepted,
            p.submit,
            p.solved,
            p.submit_user
        from problem p
        where problem_id=#{id}
    </select>
    <update id="setInDate">
        UPDATE problem SET in_date=#{inDate} where problem_id=#{id}
    </update>
    <update id="updateSelective">
        UPDATE problem p
        <if test='lang!=null and lang!=""'>
            <include refid="joinI18n"/>
        </if>
        <set>
            <if test='lang==null or lang==""'>
                <if test='p.title!=null'>p.title=#{p.title},</if>
                <if test='p.description!=null'>p.description=#{p.description},</if>
                <if test='p.input!=null'>p.input=#{p.input},</if>
                <if test='p.output!=null'>p.output=#{p.output},</if>
                <if test='p.hint!=null'>p.hint=#{p.hint},</if>
                <if test='p.source!=null'>p.source=#{p.source},</if>
            </if>
            <if test='lang!=null and lang!=""'>
                <if test='p.title!=null'>pi.title=nullif(#{p.title},p.title),</if>
                <if test='p.description!=null'>pi.description=nullif(#{p.description},p.description),</if>
                <if test='p.input!=null'>pi.input=nullif(#{p.input},p.input),</if>
                <if test='p.output!=null'>pi.output=nullif(#{p.output},p.output),</if>
                <if test='p.hint!=null'>pi.hint=nullif(#{p.hint},p.hint),</if>
                <if test='p.source!=null'>pi.source=nullif(#{p.source},p.source),</if>
            </if>
            <if test='p.sampleInput!=null'>p.sample_input=#{p.sampleInput},</if>
            <if test='p.sampleOutput!=null'>p.sample_output=#{p.sampleOutput},</if>
            <if test='p.timeLimit!=null'>p.time_limit=#{p.timeLimit},</if>
            <if test='p.memoryLimit!=null'>p.memory_limit=#{p.memoryLimit},</if>
            <if test='p.modifiedTime!=null'>p.modified_time=#{p.modifiedTime},</if>
            <if test='p.disabled!=null'>p.disabled=#{p.disabled},</if>
        </set>
        <where>p.problem_id=#{id}</where>
    </update>
    <update id="updateImgUrl">
        UPDATE problem p
        <set>
            p.description=replace(p.description,#{imgSrc},#{newImgSrc}),
            p.input=replace(p.input,#{imgSrc},#{newImgSrc}),
            p.output=replace(p.output,#{imgSrc},#{newImgSrc}),
            p.hint=replace(p.hint,#{imgSrc},#{newImgSrc}),
            p.source=replace(p.source,#{imgSrc},#{newImgSrc}),
        </set>
        <where>p.problem_id=#{problemId}</where>
    </update>
    <select id="findAll" resultMap="baseResultMap">
        select
            p.problem_id,
            COALESCE(pi.title,p.title) title,
            p.in_date,
            p.disabled,
            p.accepted,
            p.submit,
            p.solved,
            p.submit_user,
            COALESCE(pi.source,p.source) source
        <if test='userId!=null'>,if(up.submit is null or up.submit=0,0,if(up.accepted!=0,1,2)) status </if>
        from problem p
        <include refid="joinI18n"/>
        <if test='userId!=null'>
            left join user_problem up on up.problem_id=p.problem_id and up.user_id=#{userId}
        </if>
        <where>
            <if test='form.sstr!=null and form.sstr!=""'> (instr(COALESCE(pi.title,p.title),#{form.sstr})&gt;0 or instr(COALESCE(pi.source,p.source),#{form.sstr})&gt;0) </if>
            <if test='form.disabled!=null'> and <if test='!form.disabled'> not </if> disabled</if>
        </where>
        <if test='userId!=null'>group by p.problem_id</if>
        order by
        <if test='pageable.sort!=null and pageable.sort.iterator().hasNext()'>
            <foreach item='item' collection='pageable.sort' separator=',' close=','>
                <choose>
                    <when test='"inDate".equalsIgnoreCase(item.property)'>p.in_date</when>
                    <when test='"date".equalsIgnoreCase(item.property)'>p.in_date</when>
                    <when test='"title".equalsIgnoreCase(item.property)'>title</when>
                    <when test='"id".equalsIgnoreCase(item.property)'>p.problem_id</when>
                    <when test='"timeLimit".equalsIgnoreCase(item.property)'>time_limit</when>
                    <when test='"memoryLimit".equalsIgnoreCase(item.property)'>memory_limit</when>
                    <when test='"defunct".equalsIgnoreCase(item.property)'>p.disabled</when>
                    <when test='"disabled".equalsIgnoreCase(item.property)'>p.disabled</when>
                    <when test='"accepted".equalsIgnoreCase(item.property)'>p.accepted</when>
                    <when test='"submit".equalsIgnoreCase(item.property)'>p.submit</when>
                    <when test='"ratio".equalsIgnoreCase(item.property)'>p.accepted/p.submit</when>
                    <when test='"difficulty".equalsIgnoreCase(item.property)'>(p.submit-p.accepted)/p.submit</when>
                    <otherwise>p.problem_id</otherwise>
                </choose>
                <if test='item.descending'> DESC</if>
            </foreach>
        </if>
        p.problem_id limit #{pageable.offset},#{pageable.pageSize}
    </select>
    <select id="count" resultType="long">
        SELECT COUNT(*) total
        from problem p
        <if test='form.sstr!=null'>
            <include refid="joinI18n"/>
        </if>
        <where>
            <if test='form.sstr!=null and form.sstr!=""'>
                (instr(COALESCE(pi.title,p.title),#{form.sstr})&gt;0 or instr(COALESCE(pi.source,p.source),#{form.sstr})&gt;0)
            </if>
            <if test='form.disabled!=null'>
                and
                <if test='!form.disabled'> not </if>
                disabled
            </if>
        </where>
    </select>
    <insert id="touchI18n">
        insert ignore into problem_i18n(id,locale) values(#{problemId},#{lang})
    </insert>
    <delete id="delete">
        delete from problem where problem_id=#{id}
    </delete>
    <delete id="deleteI18n">
        delete from problem_i18n where id=#{id}
    </delete>
</mapper>
